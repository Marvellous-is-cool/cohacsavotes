<!-- voteNowSuccess.ejs -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vote Now Success</title>
    <!-- Include Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Include your custom CSS -->
    <link rel="stylesheet" href="/styles/style.css" />
    <style>
      /* Additional styles for the success and failure messages */
      .success-message {
        color: rgba(11, 62, 11, 0.503);
        font-weight: bold;
      }

      .failure-message {
        color: red;
        font-weight: bold;
      }

      .vote-again-button {
        margin-top: 10px;
      }
    </style>
  </head>
  <body>
    <%- include('header', { selectedContestant }) %>
    <div class="container mt-5">
      <div class="d-flex justify-content-between align-items-center">
        <% if (status === 'success') { %>
        <h2 class="text-success">Congratulations</h2>
        <% } else if (status === 'failed') { %>
        <h2 class="text-danger">Sorry, your payment was not successful</h2>
        <% } else { %>
        <h2 class="text-info">There is an error within your payment</h2>
        <% } %>
      </div>
      <!-- Display the selected contestant details -->
      <div class="contestant-card">
        <% if (selectedContestant) { %>
        <img
          src="/uploads/<%= selectedContestant.photo_url %>"
          alt="<%= selectedContestant.nickname %>"
          class="img-small"
        />

        <p class="mt-2 nickname">
          Nickname: <%= selectedContestant.nickname %>
        </p>
        <p>Level: <%= selectedContestant.level %></p>
        <p>Award Title: <%= selectedContestant.award_titles[0] %></p>
        <!-- Assuming there's only one award title -->

        <!-- Display "Voted Successfully" or "Try Again" button based on payment status -->
        <% if (status === 'success') { %>
        <button class="btn btn-success" disabled>Voted Successfully!</button>
        <a
          href="#"
          id="voteAgainButton"
          class="btn btn-primary vote-again-button"
          >Vote Again</a
        >
        <% } else if (status === 'failed') { %>
        <p class="failure-message">Payment failed. Please try again.</p>
        <a
          href="#"
          id="tryAgainButton"
          class="btn btn-primary vote-again-button"
          >Try Again</a
        >
        <% } else { %>
        <p class="failure-message">Invalid payment status. Please try again.</p>
        <% } %> <% } else { %>
        <!-- Render a message when selectedContestant is not available -->
        <p class="failure-message">Contestant details not available.</p>
        <% } %>
      </div>
      <!-- Button to set the amount -->
      <button
        id="setAmountButton"
        class="btn btn-info mt-3"
        data-bs-toggle="modal"
        data-bs-target="#amountModal"
      >
        Set Amount
      </button>

      <!-- Modal for entering the amount -->
      <div class="modal" tabindex="-1" role="dialog" id="amountModal">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Set Amount</h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <!-- Input field for entering the amount -->
              <div class="mb-3">
                <label for="amount" class="form-label">Enter Amount:</label>
                <input
                  type="number"
                  class="form-control"
                  id="amount"
                  placeholder="100"
                  step="100"
                />
              </div>
            </div>
            <div class="modal-footer">
              <!-- Confirm button to proceed with the set amount -->
              <button
                type="button"
                class="btn btn-primary"
                id="confirmPaymentButton"
              >
                Confirm
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Include necessary scripts and libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Add custom script to handle "Vote Again" and "Try Again" button clicks -->
    <!-- Include necessary scripts and libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Function to retrieve email from local storage
        function retrieveStoredEmail() {
          return localStorage.getItem("userEmail");
        }

        // Function to initiate the process of fetching authentication URL
        function initiateAuthenticationRequest(amount) {
          // Retrieve stored email
          var storedEmail = retrieveStoredEmail();

          // Check if email is available
          if (storedEmail) {
            // Prepare request body
            var requestBody = {
              email: storedEmail,
              amount: amount,
            };

            // Fetch Paystack authentication URL from the server using POST request
            fetch(`/<%= selectedContestant.id %>/payment/get-url`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(requestBody),
            })
              .then((response) => response.json())
              .then((data) => {
                // Continue processing as needed
                if (data.authorization_url) {
                  // Redirect to Paystack authentication URL
                  window.location.href = data.authorization_url;
                } else {
                  console.error("Invalid response from server:", data);
                  // Handle the case where the response indicates an error
                }
              })
              .catch((error) => {
                console.error("Error during fetch request:", error);
                // Handle fetch error
              });
          } else {
            console.error("Stored email not found.");
            // Handle the case where stored email is not available
          }
        }

        // Handle "Vote Again" button click
        var voteAgainButton = document.getElementById("voteAgainButton");
        if (voteAgainButton) {
          voteAgainButton.addEventListener("click", function () {
            initiateAuthenticationRequest();
          });
        } else {
          console.error("Vote Again button not found.");
        }

        // Handle "Try Again" button click
        var tryAgainButton = document.getElementById("tryAgainButton");
        if (tryAgainButton) {
          tryAgainButton.addEventListener("click", function () {
            initiateAuthenticationRequest();
          });
        } else {
          console.error("Try Again button not found.");
        }

        // Show the modal when the "Set Amount" button is clicked
        var setAmountButton = document.getElementById("setAmountButton");
        setAmountButton.addEventListener("click", function () {
          var amountModal = new bootstrap.Modal(
            document.getElementById("amountModal")
          );
          amountModal.show();
        });

        // Handle the "Confirm" button click in the modal
        var confirmPaymentButton = document.getElementById(
          "confirmPaymentButton"
        );
        confirmPaymentButton.addEventListener("click", function () {
          // Retrieve the amount from the input field
          var amountInput = document.getElementById("amount");
          var amount = amountInput.value;

          // Validate the amount
          if (amount && /^\d+$/.test(amount)) {
            amount = parseInt(amount);

            // Ensure the amount is not less than 100 and is a multiple of 100
            if (amount >= 100 && amount % 100 === 0) {
              // Proceed with the payment
              initiateAuthenticationRequest(amount);
            } else {
              // Display an error message for invalid amount
              alert(
                "Please enter a valid amount (minimum 100, in multiples of 100)."
              );
            }
          } else {
            // Display an error message for invalid input
            alert("Please enter a valid amount.");
          }
        });
      });
    </script>

    <!-- views/footer.ejs -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
